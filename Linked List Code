# Create a Node class to create a node
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

# Create a LinkedList class
class LinkedList:
    def __init__(self):
        self.head = None

    # Method to add a node at the beginning of the LL
    def insertAtBegin(self, data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node

    # Method to add a node at any index
    # Indexing starts from 0.
    def insertAtIndex(self, data, index):
        if index == 0:
            self.insertAtBegin(data)
            return

        position = 0
        current_node = self.head
        while current_node is not None and position + 1 != index:
            position += 1
            current_node = current_node.next

        if current_node is not None:
            new_node = Node(data)
            new_node.next = current_node.next
            current_node.next = new_node
        else:
            print("Index not present")

    def printLL(self):
        current_node = self.head
        while current_node:
            print(current_node.data, end="--")
            current_node = current_node.next

# create a new linked list
llist = LinkedList()

# add nodes to the linked list
llist.insertAtBegin('Muntag')
llist.insertAtBegin('Shahood')
llist.insertAtBegin('Ryan')
llist.insertAtBegin('Marcos')
llist.insertAtBegin('Aidan')
llist.insertAtBegin('Mason')
llist.insertAtBegin('Christopher')
llist.insertAtBegin('Leo')
llist.insertAtBegin('Jaiden')
llist.insertAtBegin('Gavin')
llist.insertAtBegin('Nate')

print("Node Data:")
llist.printLL()
